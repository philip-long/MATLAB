function [q_out,tc] = func_igm_lwr(t_d,q3,var_geo,qmin_adm,qmax_adm,marge_bornes)

% this function calculates the igm from a end effector position find a
% solution for the Kuka LWR4+ and the Kuka IIWA, using khalil alogrithm 6.6
%
% input: 
% t_d (4x4) is the desired robot frame
% q3 (1x1) is the position of axis q3 (=E1)
% var_geo (16x1) contains the geometric parameters of the robot
% qmin_adm (7x1) contains the minimum of joint positions
% qmax_adm (7x1) contains the maximum of joint positions
% marge_bornes (1x1) marges sur les positions 
% 
% output:
% q_out (7x1) is the calculated position
% tc (4x4) is the calculated robot frame closest to t_d
%
% copyright (c) 2014 philip long (IRCCyN)
% update : 27/01/14 anthony jubien
%
% permission is hereby granted, free of charge, to any person obtaining a copy
% of this software and associated documentation files (the "software"), to deal
% in the software without restriction, subject to the following conditions:
%
% the above copyright notice and this permission notice shall be included in
% all copies or substantial portions of the software.
%
% the software is provided "as is", without warranty of any kind.

% suppression du warning relatif à la singularité de la jacobienne:
% pas problématique car les dq calculés vont s'annuler entre eux

%codegen
assert(isa(t_d,'double'));
assert(all(size(t_d) == [4 4]));
assert(isa(q3,'double'));
assert(all(size(q3) == [1 1]));
assert(isa(var_geo,'double'));
assert(all(size(var_geo) == [16 1]));
assert(isa(qmin_adm,'double'));
assert(all(size(qmin_adm) == [7 1]));
assert(isa(qmax_adm,'double'));
assert(all(size(qmax_adm) == [7 1]));
assert(isa(marge_bornes,'double'));
assert(all(size(marge_bornes) == [1 1]));

%warning off matlab:nearlysingularmatrix


nb_ite_max  = 10000  ; % nombre maximum d'itération pour une initialisation
seuil_stop   = 1e-10 ; % seuil d'arrêt de recherche de solution
seuil_2      = 1e-2 ; % seuil d'écart au 0, +-pi et +-pi/2

% vérification que la valeur de q3 ne dépasse pas les bornes articulaires
if q3 > qmax_adm(3) || q3 < qmin_adm(3)
    error('la valeur de q3 dépasse les bornes articulaires')
end

qmin_adm = (1-marge_bornes) * qmin_adm ;
qmax_adm = (1-marge_bornes) * qmax_adm ;

axe_bv = [ 1 2 ]         ;  % axes non 'bloqués' avant axe bloqué (ici q3)
axe_av = [ 3 4 5 6]      ;  % axes non 'bloqués' après axe bloqué (ici q3)
axe_v  = [ 1 2 4 5 6 7 ]  ; % axes non 'bloqués' (ici tous sauf q3)

qc_no3 = [ 0 ; 0 ; 0 ; 0 ; 0 ; 0].*(qmax_adm(axe_v)-qmin_adm(axe_v))+qmin_adm(axe_v); % initialisation du vecteur d'axes non bloqués

nb_ite = 0;
nok = 1;
while nok == 1 && nb_ite < nb_ite_max
    
    nb_ite = nb_ite + 1;
    [pos_err,ualpha] = func_carterror(func_fgm([ qc_no3(axe_bv) ; q3 ; qc_no3(axe_av) ],var_geo),t_d) ;
    
    if norm(pos_err)<seuil_stop && norm(ualpha)<seuil_stop
        if all([qc_no3<qmax_adm(axe_v);qc_no3>qmin_adm(axe_v)]) == 1
            nok = 0;
        else
            qc_no3 = rand(6,1).*(qmax_adm(axe_v)-qmin_adm(axe_v))+qmin_adm(axe_v); % initialisation du vecteur d'axes non bloqués de manière aléatoire
        end
    else
        if all([qc_no3<qmax_adm(axe_v);qc_no3>qmin_adm(axe_v)]) == 1
            
            jac = func_jac([ qc_no3(axe_bv) ; q3 ; qc_no3(axe_av) ],var_geo);
            dq= jac(:,axe_v)\[ pos_err ; ualpha] ;
            
            qc_no3 = qc_no3 + dq ;
            
            for i_jnt=1:6
                qc_no3(i_jnt)=mod(qc_no3(i_jnt),2*pi);
                if qc_no3(i_jnt) > pi
                    qc_no3(i_jnt)=qc_no3(i_jnt)-(2*pi);
                end
            end
        else
            qc_no3 = rand(6,1).*(qmax_adm(axe_v)-qmin_adm(axe_v))+qmin_adm(axe_v); % initialisation du vecteur d'axes non bloqués de manière aléatoire
        end
        
    end
    
end

if nb_ite == nb_ite_max
    error('solution non convergente: possibilité de recherche en dehors de l''espace de travail')
end

%warning('off','last')

%recherche solution optimale
qc_no3_bis = qc_no3 ;
if abs( qc_no3(1) + qc_no3(3) + qc_no3(6) ) < seuil_2
    qc_no3_bis([1 3 6]) = [ 0 0 0 ];
elseif abs( qc_no3(1) + qc_no3(3) ) < seuil_2
    qc_no3_bis([1 3]) = [ 0 0 ];
elseif abs( qc_no3(1) + qc_no3(6) ) < seuil_2
    qc_no3_bis([1 6]) = [ 0 0 ];
elseif abs( qc_no3(3) + qc_no3(6) ) < seuil_2
    qc_no3_bis([1 6]) = [ 0 0 ];
end
for i_jnt= 1:6
    if abs(qc_no3_bis(i_jnt)) < seuil_2
        qc_no3_bis(i_jnt) = 0;
    elseif abs(qc_no3_bis(i_jnt)) < pi+seuil_2 && pi-seuil_2 < abs(qc_no3_bis(i_jnt))
        qc_no3_bis(i_jnt) = sign(qc_no3_bis(i_jnt))*pi;
    elseif abs(qc_no3_bis(i_jnt)) < pi/2+seuil_2 && pi/2-seuil_2 < abs(qc_no3_bis(i_jnt))
        qc_no3_bis(i_jnt) = sign(qc_no3_bis(i_jnt))*pi/2;
    end
end
[pos_err,ualpha] = func_carterror(func_fgm([ qc_no3_bis(axe_bv) ; q3 ; qc_no3_bis(axe_av) ],var_geo),t_d) ;
if ( norm(pos_err)<seuil_stop && norm(ualpha)<seuil_stop )
    qc_no3 = qc_no3_bis ;
end


qc_no3_bis = qc_no3 ;
if qc_no3(2)< 0 && qc_no3(3)<0 && qc_no3(5)<0 % dans certains cas 2 positions possibles pour q2 q4 et q6, on prend la plus simple
    qc_no3_bis([2 3 5]) = [ -qc_no3(2) -qc_no3(3) -qc_no3(5) ];
end
[pos_err,ualpha] = func_carterror(func_fgm([ qc_no3_bis(axe_bv) ; q3 ; qc_no3_bis(axe_av) ],var_geo),t_d) ;
if ( norm(pos_err)<seuil_stop && norm(ualpha)<seuil_stop )
    qc_no3 = qc_no3_bis ;
end


q_out = [ qc_no3(axe_bv) ; q3 ; qc_no3(axe_av) ] ; % vecteur de position

tc    = func_fgm(q_out,var_geo);
end

function [ pos_err , ualpha ] = func_carterror(t,td)
% finds the error in position and orientation between 2 trasnformation
% matrix of vector inputs and outputs the following position and udelta
%
% input: t  [position ; orientation] of t
%        td [position ; orientation] of td
%
% copyright (c) 2012 philip long
% update : 27/01/14 anthony jubien
%
% permission is hereby granted, free of charge, to any person obtaining a copy
% of this software and associated documentation files (the "software"), to deal
% in the software without restriction, subject to the following conditions:
%
% the above copyright notice and this permission notice shall be included in
% all copies or substantial portions of the software.
%
% the software is provided "as is", without warranty of any kind.
% ouput:
% pos_err = position2-position1
% ualpha = udelta(r2*r1')
% norm_error = norm(pos_err) + norm(ualpha);


x = [ t td ];

p=t(1:3,4);
r=t(1:3,1:3);
pd=td(1:3,4);
rd=td(1:3,1:3);

pos_err=pd-p;
diffmat=rd*(r'); % rotation difference between desired and current frames
ualpha=0.5*[diffmat(3,2)-diffmat(2,3);diffmat(1,3)-diffmat(3,1);diffmat(2,1)-diffmat(1,2)];

end


function mat_t = func_fgm(q,var_geo)

q1 = q(1);
q2 = q(2);
q3 = q(3);
q4 = q(4);
q5 = q(5);
q6 = q(6);
q7 = q(7);

d1 = var_geo(1);
d2 = var_geo(2);
d3 = var_geo(3);
d4 = var_geo(4);
d5 = var_geo(5);
d6 = var_geo(6);
d7 = var_geo(7);
d8 = var_geo(8);

rl1 = var_geo(9);
rl2 = var_geo(10);
rl3 = var_geo(11);
rl4 = var_geo(12);
rl5 = var_geo(13);
rl6 = var_geo(14);
rl7 = var_geo(15);
rl8 = var_geo(16);

u1t211=cos(q1).*cos(q2);
u1t212=-(cos(q1).*sin(q2));
u1t214=d1 + d2.*cos(q1) + rl2.*sin(q1);
u1t221=cos(q2).*sin(q1);
u1t222=-(sin(q1).*sin(q2));
u1t224=-(rl2.*cos(q1)) + d2.*sin(q1);
u1t311=u1t211.*cos(q3) - sin(q1).*sin(q3);
u1t312=-(cos(q3).*sin(q1)) - u1t211.*sin(q3);
u1t314=d3.*u1t211 + rl3.*u1t212 + u1t214;
u1t321=u1t221.*cos(q3) + cos(q1).*sin(q3);
u1t322=cos(q1).*cos(q3) - u1t221.*sin(q3);
u1t324=d3.*u1t221 + rl3.*u1t222 + u1t224;
u1t331=cos(q3).*sin(q2);
u1t332=-(sin(q2).*sin(q3));
u1t334=rl1 + rl3.*cos(q2) + d3.*sin(q2);
u1t411=u1t311.*cos(q4) - u1t212.*sin(q4);
u1t412=-(u1t212.*cos(q4)) - u1t311.*sin(q4);
u1t414=d4.*u1t311 + rl4.*u1t312 + u1t314;
u1t421=u1t321.*cos(q4) - u1t222.*sin(q4);
u1t422=-(u1t222.*cos(q4)) - u1t321.*sin(q4);
u1t424=d4.*u1t321 + rl4.*u1t322 + u1t324;
u1t431=u1t331.*cos(q4) - cos(q2).*sin(q4);
u1t432=-(cos(q2).*cos(q4)) - u1t331.*sin(q4);
u1t434=d4.*u1t331 + rl4.*u1t332 + u1t334;
u1t511=u1t411.*cos(q5) + u1t312.*sin(q5);
u1t512=u1t312.*cos(q5) - u1t411.*sin(q5);
u1t514=d5.*u1t411 - rl5.*u1t412 + u1t414;
u1t521=u1t421.*cos(q5) + u1t322.*sin(q5);
u1t522=u1t322.*cos(q5) - u1t421.*sin(q5);
u1t524=d5.*u1t421 - rl5.*u1t422 + u1t424;
u1t531=u1t431.*cos(q5) + u1t332.*sin(q5);
u1t532=u1t332.*cos(q5) - u1t431.*sin(q5);
u1t534=d5.*u1t431 - rl5.*u1t432 + u1t434;
u1t611=u1t511.*cos(q6) - u1t412.*sin(q6);
u1t612=-(u1t412.*cos(q6)) - u1t511.*sin(q6);
u1t614=d6.*u1t511 - rl6.*u1t512 + u1t514;
u1t621=u1t521.*cos(q6) - u1t422.*sin(q6);
u1t622=-(u1t422.*cos(q6)) - u1t521.*sin(q6);
u1t624=d6.*u1t521 - rl6.*u1t522 + u1t524;
u1t631=u1t531.*cos(q6) - u1t432.*sin(q6);
u1t632=-(u1t432.*cos(q6)) - u1t531.*sin(q6);
u1t634=d6.*u1t531 - rl6.*u1t532 + u1t534;
u8t14=d7 + d8.*cos(q7);
u8t24=rl7 + rl8;
u8t34=-(d8.*sin(q7));
u1t811=u1t611.*cos(q7) + u1t512.*sin(q7);
u1t812=u1t512.*cos(q7) - u1t611.*sin(q7);
u1t814=u1t614 + u1t611.*u8t14 + u1t612.*u8t24 - u1t512.*u8t34;
u1t821=u1t621.*cos(q7) + u1t522.*sin(q7);
u1t822=u1t522.*cos(q7) - u1t621.*sin(q7);
u1t824=u1t624 + u1t621.*u8t14 + u1t622.*u8t24 - u1t522.*u8t34;
u1t831=u1t631.*cos(q7) + u1t532.*sin(q7);
u1t832=u1t532.*cos(q7) - u1t631.*sin(q7);
u1t834=u1t634 + u1t631.*u8t14 + u1t632.*u8t24 - u1t532.*u8t34;
tft811= u1t811;
tft821= u1t821;
tft831= u1t831;
tft812= u1t812;
tft822= u1t822;
tft832= u1t832;
tft813= u1t612;
tft823= u1t622;
tft833= u1t632;
tft814= u1t814;
tft824= u1t824;
tft834= u1t834;

mat_t = [ ...
    tft811 tft812 tft813 tft814
    tft821 tft822 tft823 tft824
    tft831 tft832 tft833 tft834
    0 0 0 1];

end

function jac = func_jac(q,var_geo)

q1 = q(1);
q2 = q(2);
q3 = q(3);
q4 = q(4);
q5 = q(5);
q6 = q(6);
q7 = q(7);

d1 = var_geo(1);
d2 = var_geo(2);
d3 = var_geo(3);
d4 = var_geo(4);
d5 = var_geo(5);
d6 = var_geo(6);
d7 = var_geo(7);
d8 = var_geo(8);

rl1 = var_geo(9);
rl2 = var_geo(10);
rl3 = var_geo(11);
rl4 = var_geo(12);
rl5 = var_geo(13);
rl6 = var_geo(14);
rl7 = var_geo(15);
rl8 = var_geo(16);

jac = [ ...
    0     0     0     0     0     0     0
    0     0     0     0     0     0     0
    0     0     0     0     0     0     0
    0     0     0     0     0     0     0
    0     0     0     0     0     0     0
    0     0     0     0     0     0     0 ];

jac(1,1) = rl6*cos(q2)*cos(q4)*cos(q6)*cos(q7)- ...
    rl4*cos(q2)*cos(q4)*cos(q5)*cos(q6)*cos(q7) + ...
    rl2*cos(q2)*cos(q3)*cos(q4)*cos(q5)*cos(q6)*cos(q7) + ...
    d2*cos(q4)*cos(q5)*cos(q6)*cos(q7)*sin(q3) + ...
    d3*cos(q2)*cos(q4)*cos(q5)*cos(q6)*cos(q7)*sin(q3) - ...
    rl7*cos(q5)*cos(q7)*sin(q2)*sin(q3) - ...
    rl8*cos(q5)*cos(q7)*sin(q2)*sin(q3) - ...
    rl5*cos(q5)*cos(q6)*cos(q7)*sin(q2)*sin(q3) - ...
    rl3*cos(q4)*cos(q5)*cos(q6)*cos(q7)*sin(q2)*sin(q3) + ...
    rl6*cos(q3)*cos(q6)*cos(q7)*sin(q2)*sin(q4) + ...
    rl2*cos(q5)*cos(q6)*cos(q7)*sin(q2)*sin(q4) - ...
    rl4*cos(q3)*cos(q5)*cos(q6)*cos(q7)*sin(q2)*sin(q4) - ...
    d4*cos(q5)*cos(q6)*cos(q7)*sin(q2)*sin(q3)*sin(q4) + ...
    d4*cos(q2)*cos(q6)*cos(q7)*sin(q5) + ...
    d2*cos(q3)*cos(q6)*cos(q7)*sin(q5) + ...
    d3*cos(q2)*cos(q3)*cos(q6)*cos(q7)*sin(q5) + ...
    d5*cos(q2)*cos(q4)*cos(q6)*cos(q7)*sin(q5) - ...
    rl7*cos(q3)*cos(q4)*cos(q7)*sin(q2)*sin(q5) - ...
    rl8*cos(q3)*cos(q4)*cos(q7)*sin(q2)*sin(q5) - ...
    rl3*cos(q3)*cos(q6)*cos(q7)*sin(q2)*sin(q5) - ...
    rl5*cos(q3)*cos(q4)*cos(q6)*cos(q7)*sin(q2)*sin(q5) - ...
    rl2*cos(q2)*cos(q6)*cos(q7)*sin(q3)*sin(q5) + ...
    rl7*cos(q2)*cos(q7)*sin(q4)*sin(q5) + ...
    rl8*cos(q2)*cos(q7)*sin(q4)*sin(q5) + ...
    rl5*cos(q2)*cos(q6)*cos(q7)*sin(q4)*sin(q5) + ...
    d5*cos(q3)*cos(q6)*cos(q7)*sin(q2)*sin(q4)*sin(q5) - ...
    rl2*cos(q4)*cos(q7)*sin(q2)*sin(q6) + ...
    rl4*cos(q3)*cos(q4)*cos(q7)*sin(q2)*sin(q6) - ...
    rl6*cos(q3)*cos(q4)*cos(q5)*cos(q7)*sin(q2)*sin(q6) + ...
    d5*cos(q7)*sin(q2)*sin(q3)*sin(q6) + ...
    d4*cos(q4)*cos(q7)*sin(q2)*sin(q3)*sin(q6) + ...
    d6*cos(q5)*cos(q7)*sin(q2)*sin(q3)*sin(q6) - ...
    rl4*cos(q2)*cos(q7)*sin(q4)*sin(q6) + ...
    rl2*cos(q2)*cos(q3)*cos(q7)*sin(q4)*sin(q6) + ...
    rl6*cos(q2)*cos(q5)*cos(q7)*sin(q4)*sin(q6) + ...
    d2*cos(q7)*sin(q3)*sin(q4)*sin(q6) + ...
    d3*cos(q2)*cos(q7)*sin(q3)*sin(q4)*sin(q6) - ...
    rl3*cos(q7)*sin(q2)*sin(q3)*sin(q4)*sin(q6) + ...
    d6*cos(q3)*cos(q4)*cos(q7)*sin(q2)*sin(q5)*sin(q6) + ...
    rl6*cos(q7)*sin(q2)*sin(q3)*sin(q5)*sin(q6) - ...
    d6*cos(q2)*cos(q7)*sin(q4)*sin(q5)*sin(q6) + ...
    d6*cos(q2)*cos(q4)*sin(q7) + ...
    d4*cos(q2)*cos(q5)*sin(q7) + ...
    d2*cos(q3)*cos(q5)*sin(q7) + ...
    d3*cos(q2)*cos(q3)*cos(q5)*sin(q7) + ...
    d5*cos(q2)*cos(q4)*cos(q5)*sin(q7) + ...
    d7*cos(q2)*cos(q4)*cos(q6)*sin(q7) - ...
    rl3*cos(q3)*cos(q5)*sin(q2)*sin(q7) - ...
    rl5*cos(q3)*cos(q4)*cos(q5)*sin(q2)*sin(q7) - ...
    rl7*cos(q3)*cos(q4)*cos(q5)*cos(q6)*sin(q2)*sin(q7) - ...
    rl8*cos(q3)*cos(q4)*cos(q5)*cos(q6)*sin(q2)*sin(q7) - ...
    rl2*cos(q2)*cos(q5)*sin(q3)*sin(q7) + ...
    rl5*cos(q2)*cos(q5)*sin(q4)*sin(q7) + ...
    rl7*cos(q2)*cos(q5)*cos(q6)*sin(q4)*sin(q7) + ...
    rl8*cos(q2)*cos(q5)*cos(q6)*sin(q4)*sin(q7) + ...
    d6*cos(q3)*sin(q2)*sin(q4)*sin(q7) + ...
    d5*cos(q3)*cos(q5)*sin(q2)*sin(q4)*sin(q7) + ...
    d7*cos(q3)*cos(q6)*sin(q2)*sin(q4)*sin(q7) + ...
    rl4*cos(q2)*cos(q4)*sin(q5)*sin(q7) - ...
    rl2*cos(q2)*cos(q3)*cos(q4)*sin(q5)*sin(q7) - ...
    d2*cos(q4)*sin(q3)*sin(q5)*sin(q7) - ...
    d3*cos(q2)*cos(q4)*sin(q3)*sin(q5)*sin(q7) + ...
    rl5*sin(q2)*sin(q3)*sin(q5)*sin(q7) + ...
    rl3*cos(q4)*sin(q2)*sin(q3)*sin(q5)*sin(q7) + ...
    rl7*cos(q6)*sin(q2)*sin(q3)*sin(q5)*sin(q7) + ...
    rl8*cos(q6)*sin(q2)*sin(q3)*sin(q5)*sin(q7) - ...
    rl2*sin(q2)*sin(q4)*sin(q5)*sin(q7) + ...
    rl4*cos(q3)*sin(q2)*sin(q4)*sin(q5)*sin(q7) + ...
    d4*sin(q2)*sin(q3)*sin(q4)*sin(q5)*sin(q7) - ...
    rl7*cos(q2)*cos(q4)*sin(q6)*sin(q7) - ...
    rl8*cos(q2)*cos(q4)*sin(q6)*sin(q7) - ...
    d7*cos(q3)*cos(q4)*cos(q5)*sin(q2)*sin(q6)*sin(q7) + ...
    d7*cos(q2)*cos(q5)*sin(q4)*sin(q6)*sin(q7) - ...
    rl7*cos(q3)*sin(q2)*sin(q4)*sin(q6)*sin(q7) - ...
    rl8*cos(q3)*sin(q2)*sin(q4)*sin(q6)*sin(q7) + ...
    d7*sin(q2)*sin(q3)*sin(q5)*sin(q6)*sin(q7);

jac(2,1) = d8*cos(q2)*cos(q4)*cos(q6) + ...
    d6*cos(q2)*cos(q4)*cos(q7) + ...
    d4*cos(q2)*cos(q5)*cos(q7) + ...
    d2*cos(q3)*cos(q5)*cos(q7) + ...
    d3*cos(q2)*cos(q3)*cos(q5)*cos(q7) + ...
    d5*cos(q2)*cos(q4)*cos(q5)*cos(q7) + ...
    d7*cos(q2)*cos(q4)*cos(q6)*cos(q7) - ...
    rl3*cos(q3)*cos(q5)*cos(q7)*sin(q2) - ...
    rl5*cos(q3)*cos(q4)*cos(q5)*cos(q7)*sin(q2) - ...
    rl7*cos(q3)*cos(q4)*cos(q5)*cos(q6)*cos(q7)*sin(q2) - ...
    rl8*cos(q3)*cos(q4)*cos(q5)*cos(q6)*cos(q7)*sin(q2) - ...
    rl2*cos(q2)*cos(q5)*cos(q7)*sin(q3) + ...
    rl5*cos(q2)*cos(q5)*cos(q7)*sin(q4) + ...
    rl7*cos(q2)*cos(q5)*cos(q6)*cos(q7)*sin(q4) + ...
    rl8*cos(q2)*cos(q5)*cos(q6)*cos(q7)*sin(q4) + ...
    d8*cos(q3)*cos(q6)*sin(q2)*sin(q4) + ...
    d6*cos(q3)*cos(q7)*sin(q2)*sin(q4) + ...
    d5*cos(q3)*cos(q5)*cos(q7)*sin(q2)*sin(q4) + ...
    d7*cos(q3)*cos(q6)*cos(q7)*sin(q2)*sin(q4) + ...
    rl4*cos(q2)*cos(q4)*cos(q7)*sin(q5) - ...
    rl2*cos(q2)*cos(q3)*cos(q4)*cos(q7)*sin(q5) - ...
    d2*cos(q4)*cos(q7)*sin(q3)*sin(q5) - ...
    d3*cos(q2)*cos(q4)*cos(q7)*sin(q3)*sin(q5) + ...
    rl5*cos(q7)*sin(q2)*sin(q3)*sin(q5) + ...
    rl3*cos(q4)*cos(q7)*sin(q2)*sin(q3)*sin(q5) + ...
    rl7*cos(q6)*cos(q7)*sin(q2)*sin(q3)*sin(q5) + ...
    rl8*cos(q6)*cos(q7)*sin(q2)*sin(q3)*sin(q5) - ...
    rl2*cos(q7)*sin(q2)*sin(q4)*sin(q5) + ...
    rl4*cos(q3)*cos(q7)*sin(q2)*sin(q4)*sin(q5) + ...
    d4*cos(q7)*sin(q2)*sin(q3)*sin(q4)*sin(q5) - ...
    rl7*cos(q2)*cos(q4)*cos(q7)*sin(q6) - ...
    rl8*cos(q2)*cos(q4)*cos(q7)*sin(q6) - ...
    d8*cos(q3)*cos(q4)*cos(q5)*sin(q2)*sin(q6) - ...
    d7*cos(q3)*cos(q4)*cos(q5)*cos(q7)*sin(q2)*sin(q6) + ...
    d8*cos(q2)*cos(q5)*sin(q4)*sin(q6) + ...
    d7*cos(q2)*cos(q5)*cos(q7)*sin(q4)*sin(q6) - ...
    rl7*cos(q3)*cos(q7)*sin(q2)*sin(q4)*sin(q6) - ...
    rl8*cos(q3)*cos(q7)*sin(q2)*sin(q4)*sin(q6) + ...
    d8*sin(q2)*sin(q3)*sin(q5)*sin(q6) + ...
    d7*cos(q7)*sin(q2)*sin(q3)*sin(q5)*sin(q6) - ...
    rl6*cos(q2)*cos(q4)*cos(q6)*sin(q7) + ...
    rl4*cos(q2)*cos(q4)*cos(q5)*cos(q6)*sin(q7) - ...
    rl2*cos(q2)*cos(q3)*cos(q4)*cos(q5)*cos(q6)*sin(q7) - ...
    d2*cos(q4)*cos(q5)*cos(q6)*sin(q3)*sin(q7) - ...
    d3*cos(q2)*cos(q4)*cos(q5)*cos(q6)*sin(q3)*sin(q7) + ...
    rl7*cos(q5)*sin(q2)*sin(q3)*sin(q7) + ...
    rl8*cos(q5)*sin(q2)*sin(q3)*sin(q7) + ...
    rl5*cos(q5)*cos(q6)*sin(q2)*sin(q3)*sin(q7) + ...
    rl3*cos(q4)*cos(q5)*cos(q6)*sin(q2)*sin(q3)*sin(q7) - ...
    rl6*cos(q3)*cos(q6)*sin(q2)*sin(q4)*sin(q7) - ...
    rl2*cos(q5)*cos(q6)*sin(q2)*sin(q4)*sin(q7) + ...
    rl4*cos(q3)*cos(q5)*cos(q6)*sin(q2)*sin(q4)*sin(q7) + ...
    d4*cos(q5)*cos(q6)*sin(q2)*sin(q3)*sin(q4)*sin(q7) - ...
    d4*cos(q2)*cos(q6)*sin(q5)*sin(q7) - ...
    d2*cos(q3)*cos(q6)*sin(q5)*sin(q7) - ...
    d3*cos(q2)*cos(q3)*cos(q6)*sin(q5)*sin(q7) - ...
    d5*cos(q2)*cos(q4)*cos(q6)*sin(q5)*sin(q7) + ...
    rl7*cos(q3)*cos(q4)*sin(q2)*sin(q5)*sin(q7) + ...
    rl8*cos(q3)*cos(q4)*sin(q2)*sin(q5)*sin(q7) + ...
    rl3*cos(q3)*cos(q6)*sin(q2)*sin(q5)*sin(q7) + ...
    rl5*cos(q3)*cos(q4)*cos(q6)*sin(q2)*sin(q5)*sin(q7) + ...
    rl2*cos(q2)*cos(q6)*sin(q3)*sin(q5)*sin(q7) - ...
    rl7*cos(q2)*sin(q4)*sin(q5)*sin(q7) - ...
    rl8*cos(q2)*sin(q4)*sin(q5)*sin(q7) - ...
    rl5*cos(q2)*cos(q6)*sin(q4)*sin(q5)*sin(q7) - ...
    d5*cos(q3)*cos(q6)*sin(q2)*sin(q4)*sin(q5)*sin(q7) + ...
    rl2*cos(q4)*sin(q2)*sin(q6)*sin(q7) - ...
    rl4*cos(q3)*cos(q4)*sin(q2)*sin(q6)*sin(q7) + ...
    rl6*cos(q3)*cos(q4)*cos(q5)*sin(q2)*sin(q6)*sin(q7) - ...
    d5*sin(q2)*sin(q3)*sin(q6)*sin(q7) - ...
    d4*cos(q4)*sin(q2)*sin(q3)*sin(q6)*sin(q7) - ...
    d6*cos(q5)*sin(q2)*sin(q3)*sin(q6)*sin(q7) + ...
    rl4*cos(q2)*sin(q4)*sin(q6)*sin(q7) - ...
    rl2*cos(q2)*cos(q3)*sin(q4)*sin(q6)*sin(q7) - ...
    rl6*cos(q2)*cos(q5)*sin(q4)*sin(q6)*sin(q7) - ...
    d2*sin(q3)*sin(q4)*sin(q6)*sin(q7) - ...
    d3*cos(q2)*sin(q3)*sin(q4)*sin(q6)*sin(q7) + ...
    rl3*sin(q2)*sin(q3)*sin(q4)*sin(q6)*sin(q7) - ...
    d6*cos(q3)*cos(q4)*sin(q2)*sin(q5)*sin(q6)*sin(q7) - ...
    rl6*sin(q2)*sin(q3)*sin(q5)*sin(q6)*sin(q7) + ...
    d6*cos(q2)*sin(q4)*sin(q5)*sin(q6)*sin(q7);

jac(3,1) = -(rl2*cos(q4)*cos(q6)*sin(q2)) + ...
    rl4*cos(q3)*cos(q4)*cos(q6)*sin(q2) - ...
    rl6*cos(q3)*cos(q4)*cos(q5)*cos(q6)*sin(q2) + ...
    d7*cos(q5)*sin(q2)*sin(q3) + ...
    d5*cos(q6)*sin(q2)*sin(q3) + ...
    d4*cos(q4)*cos(q6)*sin(q2)*sin(q3) + ...
    d6*cos(q5)*cos(q6)*sin(q2)*sin(q3) + ...
    d8*cos(q5)*cos(q7)*sin(q2)*sin(q3) - ...
    rl4*cos(q2)*cos(q6)*sin(q4) + ...
    rl2*cos(q2)*cos(q3)*cos(q6)*sin(q4) + ...
    rl6*cos(q2)*cos(q5)*cos(q6)*sin(q4) + ...
    d2*cos(q6)*sin(q3)*sin(q4) + ...
    d3*cos(q2)*cos(q6)*sin(q3)*sin(q4) - ...
    rl3*cos(q6)*sin(q2)*sin(q3)*sin(q4) + ...
    d7*cos(q3)*cos(q4)*sin(q2)*sin(q5) + ...
    d6*cos(q3)*cos(q4)*cos(q6)*sin(q2)*sin(q5) + ...
    d8*cos(q3)*cos(q4)*cos(q7)*sin(q2)*sin(q5) + ...
    rl6*cos(q6)*sin(q2)*sin(q3)*sin(q5) - ...
    d7*cos(q2)*sin(q4)*sin(q5) - ...
    d6*cos(q2)*cos(q6)*sin(q4)*sin(q5) - ...
    d8*cos(q2)*cos(q7)*sin(q4)*sin(q5) - ...
    rl6*cos(q2)*cos(q4)*sin(q6) + ...
    rl4*cos(q2)*cos(q4)*cos(q5)*sin(q6) - ...
    rl2*cos(q2)*cos(q3)*cos(q4)*cos(q5)*sin(q6) - ...
    d2*cos(q4)*cos(q5)*sin(q3)*sin(q6) - ...
    d3*cos(q2)*cos(q4)*cos(q5)*sin(q3)*sin(q6) + ...
    rl5*cos(q5)*sin(q2)*sin(q3)*sin(q6) + ...
    rl3*cos(q4)*cos(q5)*sin(q2)*sin(q3)*sin(q6) - ...
    rl6*cos(q3)*sin(q2)*sin(q4)*sin(q6) - ...
    rl2*cos(q5)*sin(q2)*sin(q4)*sin(q6) + ...
    rl4*cos(q3)*cos(q5)*sin(q2)*sin(q4)*sin(q6) + ...
    d4*cos(q5)*sin(q2)*sin(q3)*sin(q4)*sin(q6) - ...
    d4*cos(q2)*sin(q5)*sin(q6) - ...
    d2*cos(q3)*sin(q5)*sin(q6) - ...
    d3*cos(q2)*cos(q3)*sin(q5)*sin(q6) - ...
    d5*cos(q2)*cos(q4)*sin(q5)*sin(q6) + ...
    rl3*cos(q3)*sin(q2)*sin(q5)*sin(q6) + ...
    rl5*cos(q3)*cos(q4)*sin(q2)*sin(q5)*sin(q6) + ...
    rl2*cos(q2)*sin(q3)*sin(q5)*sin(q6) - ...
    rl5*cos(q2)*sin(q4)*sin(q5)*sin(q6) - ...
    d5*cos(q3)*sin(q2)*sin(q4)*sin(q5)*sin(q6) + ...
    d8*cos(q3)*cos(q4)*cos(q5)*cos(q6)*sin(q2)*sin(q7) - ...
    d8*cos(q2)*cos(q5)*cos(q6)*sin(q4)*sin(q7) - ...
    d8*cos(q6)*sin(q2)*sin(q3)*sin(q5)*sin(q7) + ...
    d8*cos(q2)*cos(q4)*sin(q6)*sin(q7) + ...
    d8*cos(q3)*sin(q2)*sin(q4)*sin(q6)*sin(q7);

jac(4,1) = cos(q3)*cos(q4)*cos(q5)*cos(q6)*cos(q7)*sin(q2) - ...
    cos(q2)*cos(q5)*cos(q6)*cos(q7)*sin(q4) - ...
    cos(q6)*cos(q7)*sin(q2)*sin(q3)*sin(q5) + ...
    cos(q2)*cos(q4)*cos(q7)*sin(q6) + ...
    cos(q3)*cos(q7)*sin(q2)*sin(q4)*sin(q6) - ...
    cos(q5)*sin(q2)*sin(q3)*sin(q7) - ...
    cos(q3)*cos(q4)*sin(q2)*sin(q5)*sin(q7) + ...
    cos(q2)*sin(q4)*sin(q5)*sin(q7);

jac(5,1) = -(cos(q5)*cos(q7)*sin(q2)*sin(q3)) - ...
    cos(q3)*cos(q4)*cos(q7)*sin(q2)*sin(q5) + ...
    cos(q2)*cos(q7)*sin(q4)*sin(q5) - ...
    cos(q3)*cos(q4)*cos(q5)*cos(q6)*sin(q2)*sin(q7) + ...
    cos(q2)*cos(q5)*cos(q6)*sin(q4)*sin(q7) + ...
    cos(q6)*sin(q2)*sin(q3)*sin(q5)*sin(q7) - ...
    cos(q2)*cos(q4)*sin(q6)*sin(q7) - ...
    cos(q3)*sin(q2)*sin(q4)*sin(q6)*sin(q7);

jac(6,1) = cos(q2)*cos(q4)*cos(q6) + ...
    cos(q3)*cos(q6)*sin(q2)*sin(q4) - ...
    cos(q3)*cos(q4)*cos(q5)*sin(q2)*sin(q6) + ...
    cos(q2)*cos(q5)*sin(q4)*sin(q6) + ...
    sin(q2)*sin(q3)*sin(q5)*sin(q6);

jac(1,2) = -(rl7*cos(q3)*cos(q5)*cos(q7)) - ...
    rl8*cos(q3)*cos(q5)*cos(q7) - ...
    rl5*cos(q3)*cos(q5)*cos(q6)*cos(q7) - ...
    rl3*cos(q3)*cos(q4)*cos(q5)*cos(q6)*cos(q7) - ...
    d3*cos(q5)*cos(q6)*cos(q7)*sin(q4) - ...
    d4*cos(q3)*cos(q5)*cos(q6)*cos(q7)*sin(q4) - ...
    rl6*cos(q6)*cos(q7)*sin(q3)*sin(q4) + ...
    rl4*cos(q5)*cos(q6)*cos(q7)*sin(q3)*sin(q4) + ...
    rl7*cos(q4)*cos(q7)*sin(q3)*sin(q5) + ...
    rl8*cos(q4)*cos(q7)*sin(q3)*sin(q5) + ...
    rl3*cos(q6)*cos(q7)*sin(q3)*sin(q5) + ...
    rl5*cos(q4)*cos(q6)*cos(q7)*sin(q3)*sin(q5) - ...
    d5*cos(q6)*cos(q7)*sin(q3)*sin(q4)*sin(q5) + ...
    d5*cos(q3)*cos(q7)*sin(q6) + ...
    d3*cos(q4)*cos(q7)*sin(q6) + ...
    d4*cos(q3)*cos(q4)*cos(q7)*sin(q6) + ...
    d6*cos(q3)*cos(q5)*cos(q7)*sin(q6) - ...
    rl4*cos(q4)*cos(q7)*sin(q3)*sin(q6) + ...
    rl6*cos(q4)*cos(q5)*cos(q7)*sin(q3)*sin(q6) - ...
    rl3*cos(q3)*cos(q7)*sin(q4)*sin(q6) + ...
    rl6*cos(q3)*cos(q7)*sin(q5)*sin(q6) - ...
    d6*cos(q4)*cos(q7)*sin(q3)*sin(q5)*sin(q6) + ...
    rl3*cos(q5)*sin(q3)*sin(q7) + ...
    rl5*cos(q4)*cos(q5)*sin(q3)*sin(q7) + ...
    rl7*cos(q4)*cos(q5)*cos(q6)*sin(q3)*sin(q7) + ...
    rl8*cos(q4)*cos(q5)*cos(q6)*sin(q3)*sin(q7) - ...
    d6*sin(q3)*sin(q4)*sin(q7) - ...
    d5*cos(q5)*sin(q3)*sin(q4)*sin(q7) - ...
    d7*cos(q6)*sin(q3)*sin(q4)*sin(q7) + ...
    rl5*cos(q3)*sin(q5)*sin(q7) + ...
    rl3*cos(q3)*cos(q4)*sin(q5)*sin(q7) + ...
    rl7*cos(q3)*cos(q6)*sin(q5)*sin(q7) + ...
    rl8*cos(q3)*cos(q6)*sin(q5)*sin(q7) + ...
    d3*sin(q4)*sin(q5)*sin(q7) + ...
    d4*cos(q3)*sin(q4)*sin(q5)*sin(q7) - ...
    rl4*sin(q3)*sin(q4)*sin(q5)*sin(q7) + ...
    d7*cos(q4)*cos(q5)*sin(q3)*sin(q6)*sin(q7) + ...
    rl7*sin(q3)*sin(q4)*sin(q6)*sin(q7) + ...
    rl8*sin(q3)*sin(q4)*sin(q6)*sin(q7) + ...
    d7*cos(q3)*sin(q5)*sin(q6)*sin(q7);

jac(2,2) = rl3*cos(q5)*cos(q7)*sin(q3) + ...
    rl5*cos(q4)*cos(q5)*cos(q7)*sin(q3) + ...
    rl7*cos(q4)*cos(q5)*cos(q6)*cos(q7)*sin(q3) + ...
    rl8*cos(q4)*cos(q5)*cos(q6)*cos(q7)*sin(q3) - ...
    d8*cos(q6)*sin(q3)*sin(q4) - ...
    d6*cos(q7)*sin(q3)*sin(q4) - ...
    d5*cos(q5)*cos(q7)*sin(q3)*sin(q4) - ...
    d7*cos(q6)*cos(q7)*sin(q3)*sin(q4) + ...
    rl5*cos(q3)*cos(q7)*sin(q5) + ...
    rl3*cos(q3)*cos(q4)*cos(q7)*sin(q5) + ...
    rl7*cos(q3)*cos(q6)*cos(q7)*sin(q5) + ...
    rl8*cos(q3)*cos(q6)*cos(q7)*sin(q5) + ...
    d3*cos(q7)*sin(q4)*sin(q5) + ...
    d4*cos(q3)*cos(q7)*sin(q4)*sin(q5) - ...
    rl4*cos(q7)*sin(q3)*sin(q4)*sin(q5) + ...
    d8*cos(q4)*cos(q5)*sin(q3)*sin(q6) + ...
    d7*cos(q4)*cos(q5)*cos(q7)*sin(q3)*sin(q6) + ...
    rl7*cos(q7)*sin(q3)*sin(q4)*sin(q6) + ...
    rl8*cos(q7)*sin(q3)*sin(q4)*sin(q6) + ...
    d8*cos(q3)*sin(q5)*sin(q6) + ...
    d7*cos(q3)*cos(q7)*sin(q5)*sin(q6) + ...
    rl7*cos(q3)*cos(q5)*sin(q7) + ...
    rl8*cos(q3)*cos(q5)*sin(q7) + ...
    rl5*cos(q3)*cos(q5)*cos(q6)*sin(q7) + ...
    rl3*cos(q3)*cos(q4)*cos(q5)*cos(q6)*sin(q7) + ...
    d3*cos(q5)*cos(q6)*sin(q4)*sin(q7) + ...
    d4*cos(q3)*cos(q5)*cos(q6)*sin(q4)*sin(q7) + ...
    rl6*cos(q6)*sin(q3)*sin(q4)*sin(q7) - ...
    rl4*cos(q5)*cos(q6)*sin(q3)*sin(q4)*sin(q7) - ...
    rl7*cos(q4)*sin(q3)*sin(q5)*sin(q7) - ...
    rl8*cos(q4)*sin(q3)*sin(q5)*sin(q7) - ...
    rl3*cos(q6)*sin(q3)*sin(q5)*sin(q7) - ...
    rl5*cos(q4)*cos(q6)*sin(q3)*sin(q5)*sin(q7) + ...
    d5*cos(q6)*sin(q3)*sin(q4)*sin(q5)*sin(q7) - ...
    d5*cos(q3)*sin(q6)*sin(q7) - ...
    d3*cos(q4)*sin(q6)*sin(q7) - ...
    d4*cos(q3)*cos(q4)*sin(q6)*sin(q7) - ...
    d6*cos(q3)*cos(q5)*sin(q6)*sin(q7) + ...
    rl4*cos(q4)*sin(q3)*sin(q6)*sin(q7) - ...
    rl6*cos(q4)*cos(q5)*sin(q3)*sin(q6)*sin(q7) + ...
    rl3*cos(q3)*sin(q4)*sin(q6)*sin(q7) - ...
    rl6*cos(q3)*sin(q5)*sin(q6)*sin(q7) + ...
    d6*cos(q4)*sin(q3)*sin(q5)*sin(q6)*sin(q7);

jac(3,2) = d7*cos(q3)*cos(q5) + ...
    d5*cos(q3)*cos(q6) + ...
    d3*cos(q4)*cos(q6) + ...
    d4*cos(q3)*cos(q4)*cos(q6) + ...
    d6*cos(q3)*cos(q5)*cos(q6) + ...
    d8*cos(q3)*cos(q5)*cos(q7) - ...
    rl4*cos(q4)*cos(q6)*sin(q3) + ...
    rl6*cos(q4)*cos(q5)*cos(q6)*sin(q3) - ...
    rl3*cos(q3)*cos(q6)*sin(q4) + ...
    rl6*cos(q3)*cos(q6)*sin(q5) - ...
    d7*cos(q4)*sin(q3)*sin(q5) - ...
    d6*cos(q4)*cos(q6)*sin(q3)*sin(q5) - ...
    d8*cos(q4)*cos(q7)*sin(q3)*sin(q5) + ...
    rl5*cos(q3)*cos(q5)*sin(q6) + ...
    rl3*cos(q3)*cos(q4)*cos(q5)*sin(q6) + ...
    d3*cos(q5)*sin(q4)*sin(q6) + ...
    d4*cos(q3)*cos(q5)*sin(q4)*sin(q6) + ...
    rl6*sin(q3)*sin(q4)*sin(q6) - ...
    rl4*cos(q5)*sin(q3)*sin(q4)*sin(q6) - ...
    rl3*sin(q3)*sin(q5)*sin(q6) - ...
    rl5*cos(q4)*sin(q3)*sin(q5)*sin(q6) + ...
    d5*sin(q3)*sin(q4)*sin(q5)*sin(q6) - ...
    d8*cos(q4)*cos(q5)*cos(q6)*sin(q3)*sin(q7) - ...
    d8*cos(q3)*cos(q6)*sin(q5)*sin(q7) - ...
    d8*sin(q3)*sin(q4)*sin(q6)*sin(q7);

jac(4,2) = -(cos(q4)*cos(q5)*cos(q6)*cos(q7)*sin(q3)) - ...
    cos(q3)*cos(q6)*cos(q7)*sin(q5) - ...
    cos(q7)*sin(q3)*sin(q4)*sin(q6) - ...
    cos(q3)*cos(q5)*sin(q7) + ...
    cos(q4)*sin(q3)*sin(q5)*sin(q7);

jac(5,2) = -(cos(q3)*cos(q5)*cos(q7)) + ...
    cos(q4)*cos(q7)*sin(q3)*sin(q5) + ...
    cos(q4)*cos(q5)*cos(q6)*sin(q3)*sin(q7) + ...
    cos(q3)*cos(q6)*sin(q5)*sin(q7) + ...
    sin(q3)*sin(q4)*sin(q6)*sin(q7);

jac(6,2) = -(cos(q6)*sin(q3)*sin(q4)) + ...
    cos(q4)*cos(q5)*sin(q3)*sin(q6) + ...
    cos(q3)*sin(q5)*sin(q6);

jac(1,3) = rl6*cos(q4)*cos(q6)*cos(q7) - ...
    rl4*cos(q4)*cos(q5)*cos(q6)*cos(q7) + ...
    d4*cos(q6)*cos(q7)*sin(q5) + ...
    d5*cos(q4)*cos(q6)*cos(q7)*sin(q5) + ...
    rl7*cos(q7)*sin(q4)*sin(q5) + ...
    rl8*cos(q7)*sin(q4)*sin(q5) + ...
    rl5*cos(q6)*cos(q7)*sin(q4)*sin(q5) - ...
    rl4*cos(q7)*sin(q4)*sin(q6) + ...
    rl6*cos(q5)*cos(q7)*sin(q4)*sin(q6) - ...
    d6*cos(q7)*sin(q4)*sin(q5)*sin(q6) + ...
    d6*cos(q4)*sin(q7) + ...
    d4*cos(q5)*sin(q7) + ...
    d5*cos(q4)*cos(q5)*sin(q7) + ...
    d7*cos(q4)*cos(q6)*sin(q7) + ...
    rl5*cos(q5)*sin(q4)*sin(q7) + ...
    rl7*cos(q5)*cos(q6)*sin(q4)*sin(q7) + ...
    rl8*cos(q5)*cos(q6)*sin(q4)*sin(q7) + ...
    rl4*cos(q4)*sin(q5)*sin(q7) - ...
    rl7*cos(q4)*sin(q6)*sin(q7) - ...
    rl8*cos(q4)*sin(q6)*sin(q7) + ...
    d7*cos(q5)*sin(q4)*sin(q6)*sin(q7);

jac(2,3) = d8*cos(q4)*cos(q6) + ...
    d6*cos(q4)*cos(q7) + ...
    d4*cos(q5)*cos(q7) + ...
    d5*cos(q4)*cos(q5)*cos(q7) + ...
    d7*cos(q4)*cos(q6)*cos(q7) + ...
    rl5*cos(q5)*cos(q7)*sin(q4) + ...
    rl7*cos(q5)*cos(q6)*cos(q7)*sin(q4) + ...
    rl8*cos(q5)*cos(q6)*cos(q7)*sin(q4) + ...
    rl4*cos(q4)*cos(q7)*sin(q5) - ...
    rl7*cos(q4)*cos(q7)*sin(q6) - ...
    rl8*cos(q4)*cos(q7)*sin(q6) + ...
    d8*cos(q5)*sin(q4)*sin(q6) + ...
    d7*cos(q5)*cos(q7)*sin(q4)*sin(q6) - ...
    rl6*cos(q4)*cos(q6)*sin(q7) + ...
    rl4*cos(q4)*cos(q5)*cos(q6)*sin(q7) - ...
    d4*cos(q6)*sin(q5)*sin(q7) - ...
    d5*cos(q4)*cos(q6)*sin(q5)*sin(q7) - ...
    rl7*sin(q4)*sin(q5)*sin(q7) - ...
    rl8*sin(q4)*sin(q5)*sin(q7) - ...
    rl5*cos(q6)*sin(q4)*sin(q5)*sin(q7) + ...
    rl4*sin(q4)*sin(q6)*sin(q7) - ...
    rl6*cos(q5)*sin(q4)*sin(q6)*sin(q7) + ...
    d6*sin(q4)*sin(q5)*sin(q6)*sin(q7);

jac(3,3) = -(rl4*cos(q6)*sin(q4)) + ...
    rl6*cos(q5)*cos(q6)*sin(q4) - ...
    d7*sin(q4)*sin(q5) - ...
    d6*cos(q6)*sin(q4)*sin(q5) - ...
    d8*cos(q7)*sin(q4)*sin(q5) - ...
    rl6*cos(q4)*sin(q6) + ...
    rl4*cos(q4)*cos(q5)*sin(q6) - ...
    d4*sin(q5)*sin(q6) - ...
    d5*cos(q4)*sin(q5)*sin(q6) - ...
    rl5*sin(q4)*sin(q5)*sin(q6) - ...
    d8*cos(q5)*cos(q6)*sin(q4)*sin(q7) + ...
    d8*cos(q4)*sin(q6)*sin(q7);

jac(4,3) = -(cos(q5)*cos(q6)*cos(q7)*sin(q4)) + ...
    cos(q4)*cos(q7)*sin(q6) + ...
    sin(q4)*sin(q5)*sin(q7);

jac(5,3) = cos(q7)*sin(q4)*sin(q5) + ...
    cos(q5)*cos(q6)*sin(q4)*sin(q7) - ...
    cos(q4)*sin(q6)*sin(q7);

jac(6,3) = cos(q4)*cos(q6) + ...
    cos(q5)*sin(q4)*sin(q6);

jac(1,4) = rl7*cos(q5)*cos(q7) + ...
    rl8*cos(q5)*cos(q7) + ...
    rl5*cos(q5)*cos(q6)*cos(q7) - ...
    d5*cos(q7)*sin(q6) - ...
    d6*cos(q5)*cos(q7)*sin(q6) - ...
    rl6*cos(q7)*sin(q5)*sin(q6) - ...
    rl5*sin(q5)*sin(q7) - ...
    rl7*cos(q6)*sin(q5)*sin(q7) - ...
    rl8*cos(q6)*sin(q5)*sin(q7) - ...
    d7*sin(q5)*sin(q6)*sin(q7);

jac(2,4) = -(rl5*cos(q7)*sin(q5)) - ...
    rl7*cos(q6)*cos(q7)*sin(q5) - ...
    rl8*cos(q6)*cos(q7)*sin(q5) - ...
    d8*sin(q5)*sin(q6) - ...
    d7*cos(q7)*sin(q5)*sin(q6) - ...
    rl7*cos(q5)*sin(q7) - ...
    rl8*cos(q5)*sin(q7) - ...
    rl5*cos(q5)*cos(q6)*sin(q7) + ...
    d5*sin(q6)*sin(q7) + ...
    d6*cos(q5)*sin(q6)*sin(q7) + ...
    rl6*sin(q5)*sin(q6)*sin(q7);

jac(3,4) = -(d7*cos(q5)) - ...
    d5*cos(q6) - ...
    d6*cos(q5)*cos(q6) - ...
    d8*cos(q5)*cos(q7) - ...
    rl6*cos(q6)*sin(q5) - ...
    rl5*cos(q5)*sin(q6) + ...
    d8*cos(q6)*sin(q5)*sin(q7);

jac(4,4) = cos(q6)*cos(q7)*sin(q5) + ...
    cos(q5)*sin(q7);

jac(5,4) = cos(q5)*cos(q7) - ...
    cos(q6)*sin(q5)*sin(q7);

jac(6,4) = -(sin(q5)*sin(q6));

jac(1,5) = rl6*cos(q6)*cos(q7) + ...
    d6*sin(q7) + ...
    d7*cos(q6)*sin(q7) - ...
    rl7*sin(q6)*sin(q7) - ...
    rl8*sin(q6)*sin(q7);

jac(2,5) = d8*cos(q6) + ...
    d6*cos(q7) + ...
    d7*cos(q6)*cos(q7) - ...
    rl7*cos(q7)*sin(q6) - ...
    rl8*cos(q7)*sin(q6) - ...
    rl6*cos(q6)*sin(q7);

jac(3,5) = -(rl6*sin(q6)) + ...
    d8*sin(q6)*sin(q7);

jac(4,5) = cos(q7)*sin(q6);

jac(5,5) = -(sin(q6)*sin(q7));

jac(6,5) = cos(q6);

jac(1,6) = -(rl7*cos(q7)) - ...
    rl8*cos(q7);

jac(2,6) = rl7*sin(q7) + ...
    rl8*sin(q7);

jac(3,6) = d7 + ...
    d8*cos(q7);

jac(4,6) = -sin(q7);

jac(5,6) = -cos(q7);

jac(6,6) = 0;

jac(1,7) = 0;

jac(2,7) = d8;

jac(3,7) = 0;

jac(4,7) = 0;

jac(5,7) = 0;

jac(6,7) = 1;


end



% % (********************************************)
% % (** symoro+ : symbolic modelling of robots **)
% % (**========================================**)
% % (**      irccyn-ecn - 1, rue de la noe     **)
% % (**      b.p.92101                         **)
% % (**      44321 nantes cedex 3, france      **)
% % (**      www.irccyn.ec-nantes.fr           **)
% % (********************************************)
%
%
% %    name of file : c:/users/adminuser/desktop/symoro_lwr_rig_full/lwrrig_full_axe3bloque.fgm
%
%
%
%
% %      geometric parameters
%
%
% % j     ant   mu    sigma gamma b     alpha d     theta r
%
%
% % 1     0     1     0     0     0     0     d1    q1    rl1
%
% %                                     pi
% % 2     1     1     0     0     0     --    d2    q2    rl2
% %                                     2
% %                                     -pi
% % 3     2     1     0     0     0     ---   d3    t3    rl3
% %                                      2
% %                                     -pi
% % 4     3     1     0     0     0     ---   d4    q4    rl4
% %                                      2
% %                                     pi
% % 5     4     1     0     0     0     --    d5    q5    rl5
% %                                     2
% %                                     pi
% % 6     5     1     0     0     0     --    d6    q6    rl6
% %                                     2
% %                                     -pi
% % 7     6     1     0     0     0     ---   d7    q7    rl7
% %                                      2
%
% % 8     7     0     2     0     0     0     d8    0     rl8
%
%
%








